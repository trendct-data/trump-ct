dem_results_sos$Candidate.Name <- gsub("Roque Rocky De La Fuente", "others_count", dem_results_sos$Candidate.Name)
dem_results_sos$Candidate.Name <- gsub("Uncommitted", "others_count", dem_results_sos$Candidate.Name)
dem_results_sos <- dem_results_sos %>%
group_by(Town.Name, Candidate.Name) %>%
summarise(votes=sum(votes)) %>%
spread(Candidate.Name, votes)
str(dem_results_sos)
dem_results_sos$vote_diff <- dem_results_sos$clinton_count - dem_results_sos$sanders_count
dem_results_sos$total <- dem_results_sos$clinton_count + dem_results_sos$sanders_count + dem_results_sos$others_count
dem_results_sos$clinton_per <- round(dem_results_sos$clinton_count/dem_results_sos$total*100,1)
dem_results_sos$sanders_per <- round(dem_results_sos$sanders_count/dem_results_sos$total*100,1)
dem_results_sos$others_per <- round(dem_results_sos$others_count/dem_results_sos$total*100,1)
dem_results_sos$percent_diff <- dem_results_sos$clinton_per - dem_results_sos$sanders_per
names(dem_results_sos)[names(dem_results_sos) == 'Town.Name'] <- 'Town'
dem_results <- dem_results_sos
library(dplyr)
## Republicans
rep_results <- read.csv("data/RepublicanPresidentialPreferencePrimary.csv", stringsAsFactors=FALSE)
rep_results <- rep_results %>%
group_by(Town.Name, Candidate.Name) %>%
summarise(votes=sum(Vote.Totals))
rep_results$Candidate.Name <- gsub("Donald J. Trump", "trump_count", rep_results$Candidate.Name)
rep_results$Candidate.Name <- gsub("John R. Kasich", "kasich_count", rep_results$Candidate.Name)
rep_results$Candidate.Name <- gsub("Ben Carson", "others_count", rep_results$Candidate.Name)
rep_results$Candidate.Name <- gsub("Ted Cruz", "others_count", rep_results$Candidate.Name)
rep_results$Candidate.Name <- gsub("Uncommitted", "others_count", rep_results$Candidate.Name)
rep_results <- rep_results %>%
group_by(Town.Name, Candidate.Name) %>%
summarise(votes=sum(votes)) %>%
spread(Candidate.Name, votes)
rep_results$vote_diff <- rep_results$trump_count - rep_results$kasich_count
rep_results$total <- rep_results$trump_count + rep_results$kasich_count + rep_results$others_count
rep_results$trump_per <- round(rep_results$trump_count/rep_results$total*100,1)
rep_results$kasich_per <- round(rep_results$kasich_count/rep_results$total*100,1)
rep_results$others_per <- round(rep_results$others_count/rep_results$total*100,1)
rep_results$percent_diff <- rep_results$trump_per - rep_results$kasich_per
names(rep_results)[names(rep_results) == 'Town.Name'] <- 'Town'
rep_results <- data.frame(rep_results)
## Democrats
dem_results_sos <- read.csv("data/DemocraticPresidentialPreferencePrimary.csv", stringsAsFactors=FALSE)
dem_results_sos <- dem_results_sos %>%
group_by(Town.Name, Candidate.Name) %>%
summarise(votes=sum(Vote.Totals))
dem_results_sos$Candidate.Name <- gsub("Bernie Sanders", "sanders_count", dem_results_sos$Candidate.Name)
dem_results_sos$Candidate.Name <- gsub("Hillary Clinton", "clinton_count", dem_results_sos$Candidate.Name)
dem_results_sos$Candidate.Name <- gsub("Roque Rocky De La Fuente", "others_count", dem_results_sos$Candidate.Name)
dem_results_sos$Candidate.Name <- gsub("Uncommitted", "others_count", dem_results_sos$Candidate.Name)
dem_results_sos <- dem_results_sos %>%
group_by(Town.Name, Candidate.Name) %>%
summarise(votes=sum(votes)) %>%
spread(Candidate.Name, votes)
str(dem_results_sos)
dem_results_sos$vote_diff <- dem_results_sos$clinton_count - dem_results_sos$sanders_count
dem_results_sos$total <- dem_results_sos$clinton_count + dem_results_sos$sanders_count + dem_results_sos$others_count
dem_results_sos$clinton_per <- round(dem_results_sos$clinton_count/dem_results_sos$total*100,1)
dem_results_sos$sanders_per <- round(dem_results_sos$sanders_count/dem_results_sos$total*100,1)
dem_results_sos$others_per <- round(dem_results_sos$others_count/dem_results_sos$total*100,1)
dem_results_sos$percent_diff <- dem_results_sos$clinton_per - dem_results_sos$sanders_per
names(dem_results_sos)[names(dem_results_sos) == 'Town.Name'] <- 'Town'
dem_results <- dem_results_sos
clinton <- dem_results[c("Town", "clinton_count", "sanders_count")]
trump <- rep_results[c("Town", "trump_count", "total")]
library(tidyr)
rep_results <- read.csv("data/RepublicanPresidentialPreferencePrimary.csv", stringsAsFactors=FALSE)
rep_results <- rep_results %>%
group_by(Town.Name, Candidate.Name) %>%
summarise(votes=sum(Vote.Totals))
rep_results$Candidate.Name <- gsub("Donald J. Trump", "trump_count", rep_results$Candidate.Name)
rep_results$Candidate.Name <- gsub("John R. Kasich", "kasich_count", rep_results$Candidate.Name)
rep_results$Candidate.Name <- gsub("Ben Carson", "others_count", rep_results$Candidate.Name)
rep_results$Candidate.Name <- gsub("Ted Cruz", "others_count", rep_results$Candidate.Name)
rep_results$Candidate.Name <- gsub("Uncommitted", "others_count", rep_results$Candidate.Name)
rep_results <- rep_results %>%
group_by(Town.Name, Candidate.Name) %>%
summarise(votes=sum(votes)) %>%
spread(Candidate.Name, votes)
rep_results$vote_diff <- rep_results$trump_count - rep_results$kasich_count
rep_results$total <- rep_results$trump_count + rep_results$kasich_count + rep_results$others_count
rep_results$trump_per <- round(rep_results$trump_count/rep_results$total*100,1)
rep_results$kasich_per <- round(rep_results$kasich_count/rep_results$total*100,1)
rep_results$others_per <- round(rep_results$others_count/rep_results$total*100,1)
rep_results$percent_diff <- rep_results$trump_per - rep_results$kasich_per
names(rep_results)[names(rep_results) == 'Town.Name'] <- 'Town'
rep_results <- data.frame(rep_results)
## Democrats
dem_results_sos <- read.csv("data/DemocraticPresidentialPreferencePrimary.csv", stringsAsFactors=FALSE)
dem_results_sos <- dem_results_sos %>%
group_by(Town.Name, Candidate.Name) %>%
summarise(votes=sum(Vote.Totals))
dem_results_sos$Candidate.Name <- gsub("Bernie Sanders", "sanders_count", dem_results_sos$Candidate.Name)
dem_results_sos$Candidate.Name <- gsub("Hillary Clinton", "clinton_count", dem_results_sos$Candidate.Name)
dem_results_sos$Candidate.Name <- gsub("Roque Rocky De La Fuente", "others_count", dem_results_sos$Candidate.Name)
dem_results_sos$Candidate.Name <- gsub("Uncommitted", "others_count", dem_results_sos$Candidate.Name)
dem_results_sos <- dem_results_sos %>%
group_by(Town.Name, Candidate.Name) %>%
summarise(votes=sum(votes)) %>%
spread(Candidate.Name, votes)
str(dem_results_sos)
dem_results_sos$vote_diff <- dem_results_sos$clinton_count - dem_results_sos$sanders_count
dem_results_sos$total <- dem_results_sos$clinton_count + dem_results_sos$sanders_count + dem_results_sos$others_count
dem_results_sos$clinton_per <- round(dem_results_sos$clinton_count/dem_results_sos$total*100,1)
dem_results_sos$sanders_per <- round(dem_results_sos$sanders_count/dem_results_sos$total*100,1)
dem_results_sos$others_per <- round(dem_results_sos$others_count/dem_results_sos$total*100,1)
dem_results_sos$percent_diff <- dem_results_sos$clinton_per - dem_results_sos$sanders_per
names(dem_results_sos)[names(dem_results_sos) == 'Town.Name'] <- 'Town'
dem_results <- dem_results_sos
clinton <- dem_results[c("Town", "clinton_count", "sanders_count")]
trump <- rep_results[c("Town", "trump_count", "total")]
clinton_trump <- left_join(clinton, trump)
clinton_trump$ct <- ifelse(clinton_trump$trump_count > clinton_trump$clinton_count, "trump", "clinton")
table(clinton_trump$ct)
head(clinton_trump)
View(rep_results)
View(clinton_trump)
View(voters_map)
colnames(town_map) <- c("id", "Clinton", "Trump")
town_map$ct <- gsub("trump", "Trump", town_map$ct)
town_map$ct <- gsub("clinton", "Clinton", town_map$ct)
voters_map <- left_join(town_shape_df, town_map)
theme_opts <- list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill="#e6e8ed"),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size=22)))
# plot map
ggplot(voters_map, aes(long,lat, group=group, fill=winner)) +
geom_polygon() +
geom_path(color = "white") +
labs(title="2008 presidential election winners by town") +
coord_equal() +
theme_opts
library(scales)
library(ggplot2)
library(ggalt)
library(stringr)
library(knitr)
library(rgdal)
require(maptools)
theme_opts <- list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill="#e6e8ed"),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size=22)))
# plot map
ggplot(voters_map, aes(long,lat, group=group, fill=winner)) +
geom_polygon() +
geom_path(color = "white") +
labs(title="2008 presidential election winners by town") +
coord_equal() +
theme_opts
ggplot(voters_map, aes(long,lat, group=group, fill=ct)) +
geom_polygon() +
geom_path(color = "white") +
labs(title="Trump versus Clinton in primary votes") +
coord_equal() +
theme_opts
head(voters_map)
town_shape <- readOGR(dsn="maps", layer="ctgeo")
town_shape_df <- fortify(town_shape, region="NAME10")
town_map <- clinton_trump
town_map <- town_map["Town", "clinton_count", "trump_count"]
colnames(town_map) <- c("id", "Clinton", "Trump")
town_map$ct <- gsub("trump", "Trump", town_map$ct)
town_map$ct <- gsub("clinton", "Clinton", town_map$ct)
voters_map <- left_join(town_shape_df, town_map)
head(voters_map)
head(clinton_trump)
town_map <- clinton_trump
town_map <- town_map["Town", "clinton_count", "trump_count", "ct"]
colnames(town_map) <- c("id", "Clinton", "Trump", "ct")
town_map$ct <- gsub("trump", "Trump", town_map$ct)
town_map$ct <- gsub("clinton", "Clinton", town_map$ct)
voters_map <- left_join(town_shape_df, town_map)
theme_opts <- list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill="#e6e8ed"),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size=22)))
# plot map
ggplot(voters_map, aes(long,lat, group=group, fill=ct)) +
geom_polygon() +
geom_path(color = "white") +
labs(title="Trump versus Clinton in primary votes") +
coord_equal() +
theme_opts
ggplot(voters_map, aes(long,lat, group=group, fill=ct)) +
geom_polygon() +
geom_path(color = "white") +
labs(title="Trump versus Clinton in primary votes") +
coord_equal() +
theme_opts
str(town_map)
town_map <- clinton_trump
str(town_map)
town_map <- town_map[c("Town", "clinton_count", "trump_count", "ct")]
str(town_map)
colnames(town_map) <- c("id", "Clinton", "Trump", "ct")
town_map$ct <- gsub("trump", "Trump", town_map$ct)
town_map$ct <- gsub("clinton", "Clinton", town_map$ct)
voters_map <- left_join(town_shape_df, town_map)
theme_opts <- list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill="#e6e8ed"),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size=22)))
# plot map
ggplot(voters_map, aes(long,lat, group=group, fill=ct)) +
geom_polygon() +
geom_path(color = "white") +
labs(title="Trump versus Clinton in primary votes") +
coord_equal() +
theme_opts
library(extrafont)
# plot map
gg <- ggplot(voters_map, aes(long,lat, group=group, fill=ct)) +
geom_polygon() +
geom_path(color = "white") +
coord_equal()
gg <- gg + labs(x=NULL, y=NULL, title=paste("Towns where Trump or Clinton won the most votes in the primaries"),
caption="SOURCE: Office of the Secretary of State\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(text = element_text(size=16))
#gg <- gg + theme(panel.grid.major=element_blank())
#gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
#gg <- gg + theme(axis.ticks=element_blank())
#gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
# plot map
gg <- ggplot(voters_map, aes(long,lat, group=group, fill=ct)) +
geom_polygon() +
geom_path(color = "white") +
coord_equal()
gg <- gg + labs(x=NULL, y=NULL, title=paste("Towns where Trump or Clinton won the most votes in the primaries"),
caption="SOURCE: Office of the Secretary of State\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
town_map <- clinton_trump
town_map <- town_map[c("Town",  "trump_count", "clinton_count", "ct")]
colnames(town_map) <- c("id", "Clinton", "Trump", "Winner")
town_map$Winner <- gsub("trump", "Trump", town_map$Winner)
town_map$Winner <- gsub("clinton", "Clinton", town_map$Winner)
voters_map <- left_join(town_shape_df, town_map)
# plot map
gg <- ggplot(voters_map, aes(long,lat, group=group, fill=Winner)) +
geom_polygon() +
geom_path(color = "white") +
coord_equal()
gg <- gg + labs(x=NULL, y=NULL, title=paste("Towns where Trump or Clinton won the most votes in the primaries"),
caption="SOURCE: Office of the Secretary of State\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
head(clinton_trump)
regis <- read.csv("data/ACT_VOTER_TOWN_PRTY_072116.csv")
View(regis)
regis <- read.csv("data/ACT_VOTER_TOWN_PRTY_072116.csv")
View(regis)
regis_percent <- regis %>%
group_by(Town) %>%
mutate(Percent=Town(sum(Town)))
regis_percent <- regis %>%
group_by(Town) %>%
mutate(Percent=round(Town/(sum(Town)*100, 2))
regis_percent <- regis %>%
group_by(Town) %>%
mutate(Percent=round(Town/sum(Town)*100, 2))
str(regis)
regis_percent <- regis %>%
group_by(Town) %>%
mutate(Percent=round(Registered/sum(Registered)*100, 2))
View(regis_percent)
regis_percent_un <- regis_percent %>%
filter(Party=="Unaffiliated")
View(regis_percent_un)
town_map <- regis_percent_un
colnames(town_map) <- c("id",  "party", "Total", "Percent")
voters_map <- left_join(town_shape_df, town_map)
ggplot() +
geom_polygon(data = voters_map, aes(x=long, y=lat, group=group, fill=Percent), color = "black", size=0.2) +
coord_map() +
scale_fill_distiller(type="seq", trans="reverse", palette = "Orange", breaks=pretty_breaks(n=10))
ggplot() +
geom_polygon(data = voters_map, aes(x=long, y=lat, group=group, fill=Percent), color = "black", size=0.2) +
coord_map() +
scale_fill_distiller(type="seq", trans="reverse", palette = "Purple", breaks=pretty_breaks(n=10))
p2008 <- read.csv("2data/2008presidential.csv")
p2008 <- read.csv("data/2008presidential.csv")
View(p2008)
p2008$winner <- ifelse(p2008$McCain.Palin > p2008$Obama.Biden, "McCain and Palin", "Obama and Biden")
p2008 <- subset(p2008, winner=="McCain and Palin")
town_map <- [c("Town", "McCain.Palin", "Winner")]
colnames(town_map) <- c("id", "McCain.Palin", "Winner")
town_map <- town_map[c("Town", "McCain.Palin", "Winner")]
town_map <- p2008
town_map <- town_map[c("Town", "McCain.Palin", "Winner")]
colnames(town_map) <- c("id", "McCain.Palin", "Winner")
voters_map <- left_join(town_shape_df, town_map)
voters_map <- subset(voters_map, !is.na(Winner))
# plot map
gg <- ggplot(voters_map, aes(long,lat, group=group, fill=Winner)) +
geom_polygon() +
geom_path(color = "white") +
coord_equal()
gg <- gg + labs(x=NULL, y=NULL, title="Towns where McCain and Palin won in 2008",
subtitle="During the Presidential general election.",
caption="SOURCE: Office of the Secretary of State\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
str(voters_map)
town_map <- p2008
head(town_map)
town_map <- town_map[c("Town", "McCain.Palin", "winner")]
head(town_map)
colnames(town_map) <- c("id", "McCain.Palin", "Winner")
voters_map <- left_join(town_shape_df, town_map)
voters_map <- subset(voters_map, !is.na(Winner))
# plot map
gg <- ggplot(voters_map, aes(long,lat, group=group, fill=Winner)) +
geom_polygon() +
geom_path(color = "white") +
coord_equal()
gg <- gg + labs(x=NULL, y=NULL, title="Towns where McCain and Palin won in 2008",
subtitle="During the Presidential general election.",
caption="SOURCE: Office of the Secretary of State\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
gg <- ggplot(voters_map, aes(long,lat, group=group, fill=Winner)) +
geom_polygon() +
geom_path(color = "white") +
coord_equal()
gg <- gg + labs(x=NULL, y=NULL, title="Towns where McCain and Palin won in 2008",
subtitle="During the Presidential general election.",
caption="SOURCE: Office of the Secretary of State\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.background="Blue")
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
gg <- ggplot(voters_map, aes(long,lat, group=group, fill=Winner)) +
geom_polygon() +
geom_path(color = "white") +
coord_equal()
gg <- gg + labs(x=NULL, y=NULL, title="Towns where McCain and Palin won in 2008",
subtitle="During the Presidential general election.",
caption="SOURCE: Office of the Secretary of State\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.background= element_rect(fill="blue"))
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
# plot map
gg <- ggplot(voters_map, aes(long,lat, group=group, fill=Winner)) +
geom_polygon() +
geom_path(color = "white") +
coord_equal()
gg <- gg + labs(x=NULL, y=NULL, title="Towns where McCain and Palin won in 2008",
subtitle="During the Presidential general election.",
caption="SOURCE: Office of the Secretary of State\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(panel.background= element_rect(fill="blue"))
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
gg <- ggplot(voters_map, aes(long,lat, group=group, fill=Winner)) +
geom_polygon() +
geom_path(color = "white") +
coord_equal()
gg <- gg + labs(x=NULL, y=NULL, title="Towns where McCain and Palin won in 2008",
subtitle="During the Presidential general election.",
caption="SOURCE: Office of the Secretary of State\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(panel.background = element_rect(fill = "blue"))
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
source("keys.R")
library("censusapi")
vars2014 <- listCensusMetadata(name="acs5", vintage=2014, "v")
View(vars2014)
geos2014 <- listCensusMetadata(name="acs5", vintage=2014, "g")
View(geos2014)
race_tracts <- getCensus(name="acs5",
vintage=2014,
key=census_key,
vars=c("NAME", "B23025"),
region="county subdivision:*", regionin="state:09")
race_tracts <- getCensus(name="acs5",
vintage=2014,
key=census_key,
vars=c("NAME", "B23025_001E", , "B23025_002E", "B23025_005E" ),
region="county subdivision:*", regionin="state:09")
race_tracts <- getCensus(name="acs5",
vintage=2014,
key=census_key,
vars=c("NAME", "B23025_001E", "B23025_002E", "B23025_005E" ),
region="county subdivision:*", regionin="state:09")
View(race_tracts)
unemployment_towns <- getCensus(name="acs5",
vintage=2014,
key=census_key,
vars=c("NAME", "B23025_001E", "B23025_002E", "B23025_005E" ),
region="county subdivision:*", regionin="state:09")
